// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum roletype{
  Admin
  User
}
enum orderstatus{
  Unconfirmed
  Rejected
  Processing
  Delivered
  Dispatched
}

model Users{
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  username String @unique
  password String
  contactNo String
  emailId String
  reviews Reviews[]
  orders Orders[]
  role roletype @default(User)
}

model Reviews{
  id Int @id @default(autoincrement())
  username String
  itemId Int
  description String
  rating Int 
  user Users @relation(fields: [username],references: [username])
  item Menu  @relation(fields: [itemId],references: [id])
}

model Orders{
  id Int @id @default(autoincrement())
  description String
  username String
  payment_id String?
  status orderstatus
  houseStreet String
  landmark String
  city String
  pincode String
  user Users @relation(fields: [username],references: [username])
  items OrderItems[]
}

model Menu{
  id Int @id @default(autoincrement())
  imageUrl String
  amount Int
  visibility Boolean
  description String
  itemreviews Reviews[]
  orders OrderItems[]
}

model OrderItems{
  id Int @id @default(autoincrement())
  quantity Int
  itemId Int
  orderId Int
  order Orders @relation(fields: [orderId],references: [id])
  item Menu @relation(fields: [itemId],references: [id])
}